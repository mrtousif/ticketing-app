apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service-deployment
  labels:
    app: order-service
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
      version: v1
  template:
    metadata:
      labels:
        app: order-service
        version: v1
    spec:
      containers:
        - name: order-service
          image: mrtousif/order-service
          imagePullPolicy: 'IfNotPresent'
          resources:
            requests:
              cpu: '100m'
              memory: '100Mi'
            limits:
              cpu: '500m'
              memory: '500Mi'
          ports:
            - containerPort: 3000
          env:
            - name: POSTGRES_DB
              value: service_one_db
            - name: POSTGRES_USER
              value: service_one_user
            - name: POSTGRES_PASSWORD
              value: password123
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: postgres-host
            - name: DB_URI
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST)/$(POSTGRES_DB)?sslmode=disable
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: redis-host
            - name: REDIS_PORT
              value: '6379'
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  #   type: NodePort
  selector:
    app: order-service
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      #   nodePort: 30001
      name: http
